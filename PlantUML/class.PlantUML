@startuml class
class NameNode {
    +distributeTasks(task: Task): void
    +manageStorage(): void
    -fileSystem: FileSystem
}

class DataNode {
    +storeData(data: Block): void
    +executeTask(task: Task): Result
    -blocks: List<Block>
}

class Task {
    +taskID: int
    +mapper: Mapper
    +reducer: Reducer
    +execute(input: Block): Result
}

class Mapper {
    +map(key: LongWritable, value: Text, context: Context): void
}

class Reducer {
    +reduce(key: Text, values: Iterable<Text>, context: Context): void
}

class SensorMapper extends Mapper {
    +map(key: LongWritable, value: Text, context: Context): void
    -parseLine(line: String): String[]
}

class SensorReducer extends Reducer {
    +reduce(key: Text, values: Iterable<Text>, context: Context): void
    -calculateCorrelation(x: List<Double>, y: List<Double>): double
}

class KeyValue {
    +key: String
    +value: String
}

class Block {
    +blockID: int
    +data: String
}

class Result {
    +resultID: int
    +outputData: String
}

class Context {
    +write(key: Writable, value: Writable): void
}

NameNode "1" --> "*" DataNode : coordonne
DataNode "1" --> "*" Block : stocke
Task "1" --> "1" Mapper : utilise
Task "1" --> "1" Reducer : utilise
Mapper <|-- SensorMapper
Reducer <|-- SensorReducer
@enduml
